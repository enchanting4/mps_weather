package WeatherPrediction.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.lang.smodel.ConceptSwitchIndex;
import jetbrains.mps.lang.smodel.ConceptSwitchIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor myFahrenheitTemperature__BehaviorDescriptor = new FahrenheitTemperature__BehaviorDescriptor();
  private final BHDescriptor myCelsiusTemperature__BehaviorDescriptor = new CelsiusTemperature__BehaviorDescriptor();
  private final BHDescriptor myTime__BehaviorDescriptor = new Time__BehaviorDescriptor();
  private final BHDescriptor myTemperature__BehaviorDescriptor = new Temperature__BehaviorDescriptor();

  public BehaviorAspectDescriptor() {
  }

  @Nullable
  public BHDescriptor getDescriptor(@NotNull SAbstractConcept concept) {
    SAbstractConcept cncpt = concept;
    switch (index_846f5o_a0h.index(cncpt)) {
      case 0:
        return myCelsiusTemperature__BehaviorDescriptor;
      case 1:
        return myFahrenheitTemperature__BehaviorDescriptor;
      case 2:
        return myTemperature__BehaviorDescriptor;
      case 3:
        return myTime__BehaviorDescriptor;
      default:
    }
    return null;
  }
  private static final ConceptSwitchIndex index_846f5o_a0h = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0x9b3f871085384257L, 0xb16537afd7f0af97L, 0x77669cff9a1358fbL), MetaIdFactory.conceptId(0x9b3f871085384257L, 0xb16537afd7f0af97L, 0x77669cff9a1358c4L), MetaIdFactory.conceptId(0x9b3f871085384257L, 0xb16537afd7f0af97L, 0x77669cff9a1691c8L), MetaIdFactory.conceptId(0x9b3f871085384257L, 0xb16537afd7f0af97L, 0x77669cff9a136175L)).seal();
}
