package WeatherPrediction.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptCelsiusTemperature = createDescriptorForCelsiusTemperature();
  /*package*/ final ConceptDescriptor myConceptFahrenheitTemperature = createDescriptorForFahrenheitTemperature();
  /*package*/ final ConceptDescriptor myConceptPredictionList = createDescriptorForPredictionList();
  /*package*/ final ConceptDescriptor myConceptTemperature = createDescriptorForTemperature();
  /*package*/ final ConceptDescriptor myConceptTime = createDescriptorForTime();
  /*package*/ final ConceptDescriptor myConceptWeatherData = createDescriptorForWeatherData();
  /*package*/ final ConceptDescriptor myConceptWeatherTimedData = createDescriptorForWeatherTimedData();
  private final LanguageConceptSwitch myConceptIndex;

  public StructureAspectDescriptor() {
    myConceptIndex = new LanguageConceptSwitch();
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptCelsiusTemperature, myConceptFahrenheitTemperature, myConceptPredictionList, myConceptTemperature, myConceptTime, myConceptWeatherData, myConceptWeatherTimedData);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myConceptIndex.index(id)) {
      case LanguageConceptSwitch.CelsiusTemperature:
        return myConceptCelsiusTemperature;
      case LanguageConceptSwitch.FahrenheitTemperature:
        return myConceptFahrenheitTemperature;
      case LanguageConceptSwitch.PredictionList:
        return myConceptPredictionList;
      case LanguageConceptSwitch.Temperature:
        return myConceptTemperature;
      case LanguageConceptSwitch.Time:
        return myConceptTime;
      case LanguageConceptSwitch.WeatherData:
        return myConceptWeatherData;
      case LanguageConceptSwitch.WeatherTimedData:
        return myConceptWeatherTimedData;
      default:
        return null;
    }
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myConceptIndex.index(c);
  }

  private static ConceptDescriptor createDescriptorForCelsiusTemperature() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WeatherPrediction", "CelsiusTemperature", 0x9b3f871085384257L, 0xb16537afd7f0af97L, 0x77669cff9a1358fbL);
    b.class_(false, false, false);
    b.parent(0x9b3f871085384257L, 0xb16537afd7f0af97L, 0x77669cff9a1691c8L);
    b.origin("r:44b228b3-0862-4ea3-9b98-57c62e8acb35(WeatherPrediction.structure)/8603736759753464059");
    b.alias("c");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFahrenheitTemperature() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WeatherPrediction", "FahrenheitTemperature", 0x9b3f871085384257L, 0xb16537afd7f0af97L, 0x77669cff9a1358c4L);
    b.class_(false, false, false);
    b.parent(0x9b3f871085384257L, 0xb16537afd7f0af97L, 0x77669cff9a1691c8L);
    b.origin("r:44b228b3-0862-4ea3-9b98-57c62e8acb35(WeatherPrediction.structure)/8603736759753464004");
    b.alias("f");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPredictionList() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WeatherPrediction", "PredictionList", 0x9b3f871085384257L, 0xb16537afd7f0af97L, 0x643ca018276d3e40L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:44b228b3-0862-4ea3-9b98-57c62e8acb35(WeatherPrediction.structure)/7222823927996563008");
    b.aggregate("weatherData", 0x77669cff9a11e859L).target(0x9b3f871085384257L, 0xb16537afd7f0af97L, 0x77669cff9a10e908L).optional(false).ordered(true).multiple(false).origin("8603736759753369689").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTemperature() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WeatherPrediction", "Temperature", 0x9b3f871085384257L, 0xb16537afd7f0af97L, 0x77669cff9a1691c8L);
    b.interface_();
    b.origin("r:44b228b3-0862-4ea3-9b98-57c62e8acb35(WeatherPrediction.structure)/8603736759753675208");
    b.prop("value", 0x77669cff9a1691c9L, "8603736759753675209");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTime() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WeatherPrediction", "Time", 0x9b3f871085384257L, 0xb16537afd7f0af97L, 0x77669cff9a136175L);
    b.class_(false, false, false);
    b.origin("r:44b228b3-0862-4ea3-9b98-57c62e8acb35(WeatherPrediction.structure)/8603736759753466229");
    b.prop("hours", 0x77669cff9a136176L, "8603736759753466230");
    b.prop("minutes", 0x77669cff9a156bf9L, "8603736759753599993");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForWeatherData() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WeatherPrediction", "WeatherData", 0x9b3f871085384257L, 0xb16537afd7f0af97L, 0x77669cff9a10e908L);
    b.class_(false, false, false);
    b.origin("r:44b228b3-0862-4ea3-9b98-57c62e8acb35(WeatherPrediction.structure)/8603736759753304328");
    b.aggregate("items", 0x77669cff9a11ccf1L).target(0x9b3f871085384257L, 0xb16537afd7f0af97L, 0x77669cff9a1358fdL).optional(false).ordered(true).multiple(true).origin("8603736759753362673").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForWeatherTimedData() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("WeatherPrediction", "WeatherTimedData", 0x9b3f871085384257L, 0xb16537afd7f0af97L, 0x77669cff9a1358fdL);
    b.class_(false, false, false);
    b.origin("r:44b228b3-0862-4ea3-9b98-57c62e8acb35(WeatherPrediction.structure)/8603736759753464061");
    b.aggregate("temperature", 0x77669cff9a13616bL).target(0x9b3f871085384257L, 0xb16537afd7f0af97L, 0x77669cff9a1691c8L).optional(false).ordered(true).multiple(false).origin("8603736759753466219").done();
    b.aggregate("time", 0x77669cff9a1578b0L).target(0x9b3f871085384257L, 0xb16537afd7f0af97L, 0x77669cff9a136175L).optional(false).ordered(true).multiple(false).origin("8603736759753603248").done();
    return b.create();
  }
}
