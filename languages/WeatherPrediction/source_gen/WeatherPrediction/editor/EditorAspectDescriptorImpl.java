package WeatherPrediction.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.EditorAspectDescriptorBase;
import org.jetbrains.annotations.NotNull;
import java.util.Collection;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import java.util.Collections;
import jetbrains.mps.lang.smodel.ConceptSwitchIndex;
import jetbrains.mps.lang.smodel.ConceptSwitchIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public class EditorAspectDescriptorImpl extends EditorAspectDescriptorBase {
  @NotNull
  public Collection<ConceptEditor> getDeclaredEditors(SAbstractConcept concept) {
    SAbstractConcept cncpt = ((SAbstractConcept) concept);
    switch (index_xbvbvu_a0a.index(cncpt)) {
      case 0:
        return Collections.<ConceptEditor>singletonList(new PredictionList_Editor());
      case 1:
        return Collections.<ConceptEditor>singletonList(new Temperature_Editor());
      case 2:
        return Collections.<ConceptEditor>singletonList(new Time_Editor());
      case 3:
        return Collections.<ConceptEditor>singletonList(new WeatherData_Editor());
      case 4:
        return Collections.<ConceptEditor>singletonList(new WeatherTimedData_Editor());
      default:
    }
    return Collections.<ConceptEditor>emptyList();
  }



  private static final ConceptSwitchIndex index_xbvbvu_a0a = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0x9b3f871085384257L, 0xb16537afd7f0af97L, 0x643ca018276d3e40L), MetaIdFactory.conceptId(0x9b3f871085384257L, 0xb16537afd7f0af97L, 0x77669cff9a1691c8L), MetaIdFactory.conceptId(0x9b3f871085384257L, 0xb16537afd7f0af97L, 0x77669cff9a136175L), MetaIdFactory.conceptId(0x9b3f871085384257L, 0xb16537afd7f0af97L, 0x77669cff9a10e908L), MetaIdFactory.conceptId(0x9b3f871085384257L, 0xb16537afd7f0af97L, 0x77669cff9a1358fdL)).seal();
}
